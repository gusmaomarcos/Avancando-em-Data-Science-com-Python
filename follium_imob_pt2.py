# -*- coding: utf-8 -*-
"""follium_imob_pt2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rvaVSlvKn1zSrWxLDJlCCniFTCgrEz6Z
"""

import geopandas as gpd

from google.colab import drive
drive.mount('/content/drive')

"""### Explorando os dados geográficos"""

rj = gpd.read_file('/content/drive/MyDrive/Databases/follium_imob/rj_setores_censitarios/33SEE250GC_SIR.shp')

cidade_rio = rj[rj['NM_MUNICIP'] == 'RIO DE JANEIRO']

import folium

bairros_rio = cidade_rio.dissolve(by = 'NM_BAIRRO')

cidade = cidade_rio.dissolve(by = 'NM_MUNICIP')

"""### Analisando os dados dos imóveis"""

import pandas as pd

imoveis = pd.read_csv('/content/drive/MyDrive/Databases/follium_imob/dados_folium_imob.csv', sep = '\t')

imoveis = gpd.GeoDataFrame(imoveis, geometry = gpd.points_from_xy(imoveis['Longitude'], imoveis['Latitude']))

imoveis = imoveis[imoveis['geometry'].within(cidade['geometry'].iloc[0])]

from folium.plugins import HeatMap

"""### Análise detalhada"""

imoveis.insert(0, 'cor', pd.qcut(imoveis['Valor'], q = [0, 0.5, 0.75, 1], labels = ['green', 'orange', 'red']))

mapa_rio = folium.Map(location = [imoveis['Latitude'].mean(), imoveis['Longitude'].mean()],
                      zoom_start = 10,
                      tiles = 'cartodbpositron')

estilo = {'fillOpacity':0 ,'color' : '#000000', 'weight': 0.5}

for indice, linha in bairros_rio.iterrows():
    bairro = gpd.GeoDataFrame(pd.DataFrame(linha).T, geometry= 'geometry', crs = 'EPSG:4674')
    folium.GeoJson(bairro, name = bairro.index[0], style_function= lambda x: estilo, tooltip = bairro.index[0]).add_to(mapa_rio)

amostra_imoveis = imoveis.sample(500)

amostra_imoveis.apply(
    lambda linha: folium.Marker(
        location = [linha['Latitude'],
                    linha['Longitude']],
        icon = folium.Icon(color = linha['cor'], icon = 'fa-home', prefix = 'fa'),
        popup = folium.Popup(f'''<b>Bairro</b>: {linha["Bairro"]}<br>
                                <b>Área</b>: {linha["Area"]} m²<br>
                                <b>Valor</b>: R$ {linha["Valor"]},00<br>
                                <b>Quartos</b>: {linha["Quartos"]}
                            ''',
                             max_width = 200,
                             sticky = True)
    ).add_to(mapa_rio), axis = 1
)

folium.LayerControl().add_to(mapa_rio)

mapa_rio

from folium.plugins import FastMarkerCluster

from folium.plugins import MarkerCluster

mapa_rio = folium.Map(location = [imoveis['Latitude'].mean(), imoveis['Longitude'].mean()],
                      zoom_start = 10,
                      tiles = 'cartodbpositron')

estilo = {'fillOpacity':0 ,'color' : '#000000', 'weight': 0.5}

for indice, linha in bairros_rio.iterrows():
    bairro = gpd.GeoDataFrame(pd.DataFrame(linha).T, geometry= 'geometry', crs = 'EPSG:4674')
    folium.GeoJson(bairro, name = bairro.index[0], style_function= lambda x: estilo, tooltip = bairro.index[0]).add_to(mapa_rio)

cluster = MarkerCluster()

imoveis.apply(
    lambda linha: folium.Marker(
        location = [linha['Latitude'],
                    linha['Longitude']],
        icon = folium.Icon(color = linha['cor'], icon = 'fa-home', prefix = 'fa'),
        popup = folium.Popup(f'''<b>Bairro</b>: {linha["Bairro"]}<br>
                                <b>Área</b>: {linha["Area"]} m²<br>
                                <b>Valor</b>: R$ {linha["Valor"]},00<br>
                                <b>Quartos</b>: {linha["Quartos"]}
                            ''',
                             max_width = 200,
                             sticky = True)
    ).add_to(cluster), axis = 1
)

cluster.add_to(mapa_rio)

folium.LayerControl().add_to(mapa_rio)

mapa_rio

bairros_rio = bairros_rio.reset_index()

for indice in range(len(bairros_rio)):
    display(imoveis[imoveis['geometry'].within(bairros_rio['geometry'].iloc[indice])])
    print(bairros_rio['NM_BAIRRO'].iloc[indice])

imoveis.insert(0, 'NM_BAIRRO', '')

for indice in range(len(bairros_rio)):
    imoveis.loc[imoveis['geometry'].within(bairros_rio['geometry'].iloc[indice]), 'NM_BAIRRO'] = bairros_rio['NM_BAIRRO'].iloc[indice]

estatisticas_bairros = imoveis.groupby('NM_BAIRRO')[['Valor', 'Tipo', 'Area']].agg({'Valor':['min', 'mean', 'max'], 'Tipo': 'count', 'Area':['min', 'max']})

estatisticas_bairros = estatisticas_bairros.droplevel(level = 0, axis = 1).reset_index()
estatisticas_bairros.columns = ['NM_BAIRRO', 'preco_min', 'preco_medio', 'preco_max', 'qtd_imoveis', 'area_min', 'area_max']

bairros_rio.to_json()

from folium.plugins import Fullscreen

cluster = MarkerCluster()

imoveis.apply(
    lambda linha: folium.Marker(
        location = [linha['Latitude'],
                    linha['Longitude']],
        icon = folium.Icon(color = linha['cor'], icon = 'fa-home', prefix = 'fa'),
        popup = folium.Popup(f'''<b>Bairro</b>: {linha["Bairro"]}<br>
                                <b>Área</b>: {linha["Area"]} m²<br>
                                <b>Valor</b>: R$ {linha["Valor"]},00<br>
                                <b>Quartos</b>: {linha["Quartos"]}
                            ''',
                             max_width = 200,
                             sticky = True)
    ).add_to(cluster), axis = 1
)

cluster.add_to(mapa_rio)

Fullscreen().add_to(mapa_rio)
mapa_rio

geografia_bairros = bairros_rio[['NM_BAIRRO', 'geometry']]

estatisticas_bairros = gpd.GeoDataFrame(estatisticas_bairros.merge(geografia_bairros, on = 'NM_BAIRRO', how = 'left'))

style_function = lambda x: {'fillColor': '#ffffff',
                            'color':'#000000',
                            'fillOpacity': 0.1,
                            'weight': 0.1}
highlight_function = lambda x: {'fillColor': '#000000',
                                'color':'#000000',
                                'fillOpacity': 0.5,
                                'weight': 0.1}

config = folium.features.GeoJson(
    estatisticas_bairros,
    style_function = style_function,
    highlight_function= highlight_function,
    tooltip = folium.features.GeoJsonTooltip(
        fields=['NM_BAIRRO', 'preco_min', 'preco_medio', 'preco_max', 'qtd_imoveis', 'area_min', 'area_max'],
        aliases=['Bairro: ', 'Preço mínimo: ', 'Preço médio: ', 'Preço máximo: ', 'Quantidade de imóveis', 'Área mínima: ', 'Área máxima: '],
        style=("background-color: white; color: #333333; font-family: arial; font-size: 12px; padding: 10px;")

    )
)

mapa_rio.add_child(config)
mapa_rio.keep_in_front(config)

#mapa_rio.save('mapa_imoveis_rio.html')
mapa_rio